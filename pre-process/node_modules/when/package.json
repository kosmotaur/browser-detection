{
  "name": "when",
  "version": "1.5.1",
  "description": "A lightweight Promise and when() implementation, plus other async goodies.",
  "keywords": [
    "promise",
    "promises",
    "deferred",
    "deferreds",
    "when",
    "async",
    "asynchronous",
    "cujo"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "repositories": [
    {
      "type": "git",
      "url": "https://github.com/cujojs/when"
    }
  ],
  "bugs": "https://github.com/cujojs/when/issues",
  "maintainers": [
    {
      "name": "Brian Cavalier",
      "url": "http://hovercraftstudios.com"
    },
    {
      "name": "John Hann",
      "url": "http://unscriptable.com"
    }
  ],
  "devDependencies": {
    "buster": "~0.6"
  },
  "main": "when",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "./node_modules/buster/bin/buster-test -e node"
  },
  "readme": "# when.js [![Build Status](https://secure.travis-ci.org/cujojs/when.png)](http://travis-ci.org/cujojs/when)\n\nA lightweight [CommonJS](http://wiki.commonjs.org/wiki/Promises) [Promises/A](http://wiki.commonjs.org/wiki/Promises/A) and `when()` implementation.  It also provides several other useful Promise-related concepts, such as joining, mapping and reducing, and has a robust unit test suite.\n\nIt's **under 1.3k** when compiled with Google Closure (w/advanced optimizations) and gzipped, and has no dependencies.\n\nwhen.js was derived from the async core of [wire.js](https://github.com/cujojs/wire).\n\nWhat's New?\n===========\n\n### 1.5.1\n\n* Performance optimization for [when.defer](when/blob/master/docs/api.md#whendefer), up to 1.5x in some cases.\n* [when/debug](when/blob/master/docs/api.md#whendebug) can now log exceptions and rejections in deeper promise chains, in some cases, even when the promises involved aren't when.js promises.\n\n### 1.5.0\n\n* New task execution and concurrency management: [when/sequence](when/blob/master/docs/api.md#whensequence), [when/pipeline](when/blob/master/docs/api.md#whenpipeline), and [when/parallel](when/blob/master/docs/api.md#whenparallel).\n* Performance optimizations for [when.all](when/blob/master/docs/api.md#whenall) and [when.map](when/blob/master/docs/api.md#whenmap), up to 2x in some cases.\n* Options for disabling [paranoid mode](when/blob/master/docs/api.md#paranoid-mode) that provides a significant performance gain in v8 (e.g. Node and Chrome). See this [v8 performance problem with Object.freeze](http://stackoverflow.com/questions/8435080/any-performance-benefit-to-locking-down-javascript-objects) for more info.\n* **Important:** `deferred` and `deferred.resolver` no longer throw when resolved/rejected multiple times.  They will return silently as if the they had succeeded.  This prevents parties to whom *only* the `resolver` has been given from using `try/catch` to determine the state of the associated promise.\n\t* For debugging, you can use the [when/debug](https://github.com/cujojs/when/wiki/when-debug) module, which will still throw when a deferred is resolved/rejected multiple times.\n\n### 1.4.4\n\n* Change UMD boilerplate to check for `exports` to avoid a problem with QUnit.  See [#54](https://github.com/cujojs/when/issues/54) for more info.\n\n[Full Changelog](https://github.com/cujojs/when/wiki/Changelog)\n\nDocs & Examples\n===============\n\n[API docs](when/blob/master/docs/api.md#api)\n\n[More info on the wiki](https://github.com/cujojs/when/wiki)\n\n[Examples](https://github.com/cujojs/when/wiki/Examples)\n\nQuick Start\n===========\n\n### AMD\n\n1. `git clone https://github.com/cujojs/when` or `git submodule add https://github.com/cujojs/when`\n1. Configure your loader with a package:\n\n\t```javascript\n\tpackages: [\n\t\t{ name: 'when', location: 'path/to/when/', main: 'when' },\n\t\t// ... other packages ...\n\t]\n\t```\n\n1. `define(['when', ...], function(when, ...) { ... });` or `require(['when', ...], function(when, ...) { ... });`\n\n### Script Tag\n\n1. `git clone https://github.com/cujojs/when` or `git submodule add https://github.com/cujojs/when`\n1. `<script src=\"path/to/when/when.js\"></script>`\n1. `when` will be available as `window.when`\n\n### Node\n\n1. `npm install when`\n1. `var when = require('when');`\n\n### RingoJS\n\n1. `ringo-admin install cujojs/when`\n1. `var when = require('when');`\n\nRunning the Unit Tests\n======================\n\nInstall [buster.js](http://busterjs.org/)\n\n`npm install -g buster`\n\nRun unit tests in Node:\n\n1. `buster test -e node`\n\nRun unit tests in Browsers (and Node):\n\n1. `buster server` - this will print a url\n2. Point browsers at <buster server url>/capture, e.g. `localhost:1111/capture`\n3. `buster test` or `buster test -e browser`\n\nReferences\n----------\n\nMuch of this code was inspired by @[unscriptable](https://github.com/unscriptable)'s [tiny promises](https://github.com/unscriptable/promises), the async innards of [wire.js](https://github.com/cujojs/wire), and some gists [here](https://gist.github.com/870729), [here](https://gist.github.com/892345), [here](https://gist.github.com/894356), and [here](https://gist.github.com/894360)\n\nSome of the code has been influenced by the great work in [Q](https://github.com/kriskowal/q), [Dojo's Deferred](https://github.com/dojo/dojo), and [uber.js](https://github.com/phiggins42/uber.js).\n",
  "_id": "when@1.5.1",
  "dist": {
    "shasum": "60068e8004ba22022f223339b39e4766015670b2"
  },
  "_from": "when@~>1"
}
